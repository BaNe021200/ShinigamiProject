security:
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    encoders:
        App\Entity\ShiniPlayer: plaintext
        App\Entity\ShiniStaff: plaintext

    providers:
        in_memory: { memory: ~ }
        player_provider:
            entity:
                class: App\Entity\ShiniPlayer
                property: email
        staff_provider:
            entity:
                class: App\Entity\ShiniStaff
                property: email
        chained_provider :
            chain:
                providers : [player_provider, staff_provider]

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            anonymous: true

            # activate different ways to authenticate

            # http_basic: true
            # https://symfony.com/doc/current/security.html#a-configuring-how-your-users-will-authenticate

            # form_login: true
            # https://symfony.com/doc/current/security/form_login_setup.html

            form_login:
                login_path: signInUp
                check_path: /signIn/validate
                username_parameter: app_login[email]
                password_parameter: app_login[password]
                default_target_path: /shiniGami/signInUp
                always_use_default_target_path: true

            provider:
                chained_provider

            logout:
                path: /logOut
                target: /shiniGami/signInUp#connexion
                #always_use_default_target_path: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/shiniPlayer, roles: [ROLE_STAFF,ROLE_PLAYER] }
        - { path: ^/shiniStaff, roles: ROLE_STAFF }


    role_hierarchy:

        ROLE_ADMIN: ROLE_STAFF
